
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEASSIGN COMMA DIVIDE EN_NENJIL_KUDI_IRUKKUM LPAREN MINUS NUMBER PLUS RPAREN STRING TIMES VARIABLEstatements : statement\n                  | statement statementsstatement : EN_NENJIL_KUDI_IRUKKUM LPAREN expression RPARENstatement : variables_list ASSIGN values_listvariables_list : VARIABLE\n                      | VARIABLE COMMA variables_listvalues_list : expression\n                   | expression COMMA values_listexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : STRINGexpression : NUMBERexpression : VARIABLE'
    
_lr_action_items = {'EN_NENJIL_KUDI_IRUKKUM':([0,2,12,13,14,15,16,19,25,26,27,28,29,30,],[3,3,-14,-15,-16,-4,-7,-3,-13,-9,-10,-11,-12,-8,]),'VARIABLE':([0,2,7,8,9,10,12,13,14,15,16,19,20,21,22,23,24,25,26,27,28,29,30,],[5,5,14,14,5,14,-14,-15,-16,-4,-7,-3,14,14,14,14,14,-13,-9,-10,-11,-12,-8,]),'$end':([1,2,6,12,13,14,15,16,19,25,26,27,28,29,30,],[0,-1,-2,-14,-15,-16,-4,-7,-3,-13,-9,-10,-11,-12,-8,]),'LPAREN':([3,7,8,10,20,21,22,23,24,],[7,10,10,10,10,10,10,10,10,]),'ASSIGN':([4,5,17,],[8,-5,-6,]),'COMMA':([5,12,13,14,16,25,26,27,28,29,],[9,-14,-15,-16,24,-13,-9,-10,-11,-12,]),'STRING':([7,8,10,20,21,22,23,24,],[12,12,12,12,12,12,12,12,]),'NUMBER':([7,8,10,20,21,22,23,24,],[13,13,13,13,13,13,13,13,]),'RPAREN':([11,12,13,14,18,25,26,27,28,29,],[19,-14,-15,-16,25,-13,-9,-10,-11,-12,]),'PLUS':([11,12,13,14,16,18,25,26,27,28,29,],[20,-14,-15,-16,20,20,-13,-9,-10,-11,-12,]),'MINUS':([11,12,13,14,16,18,25,26,27,28,29,],[21,-14,-15,-16,21,21,-13,-9,-10,-11,-12,]),'TIMES':([11,12,13,14,16,18,25,26,27,28,29,],[22,-14,-15,-16,22,22,-13,22,22,-11,-12,]),'DIVIDE':([11,12,13,14,16,18,25,26,27,28,29,],[23,-14,-15,-16,23,23,-13,23,23,-11,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,2,],[1,6,]),'statement':([0,2,],[2,2,]),'variables_list':([0,2,9,],[4,4,17,]),'expression':([7,8,10,20,21,22,23,24,],[11,16,18,26,27,28,29,16,]),'values_list':([8,24,],[15,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statement','statements',1,'p_statements','parser.py',14),
  ('statements -> statement statements','statements',2,'p_statements','parser.py',15),
  ('statement -> EN_NENJIL_KUDI_IRUKKUM LPAREN expression RPAREN','statement',4,'p_statement_print','parser.py',20),
  ('statement -> variables_list ASSIGN values_list','statement',3,'p_statement_assign','parser.py',28),
  ('variables_list -> VARIABLE','variables_list',1,'p_variables_list','parser.py',40),
  ('variables_list -> VARIABLE COMMA variables_list','variables_list',3,'p_variables_list','parser.py',41),
  ('values_list -> expression','values_list',1,'p_values_list','parser.py',48),
  ('values_list -> expression COMMA values_list','values_list',3,'p_values_list','parser.py',49),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',57),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',58),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',59),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',60),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',71),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',75),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',79),
  ('expression -> VARIABLE','expression',1,'p_expression_variable','parser.py',83),
]
